/* soapStub.h
   Generated by gSOAP 2.8.17r from YrElecarDetect.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20817
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_ns__SendMissionResponse
#define SOAP_TYPE_ns__SendMissionResponse (9)
/* ns:SendMissionResponse */
struct ns__SendMissionResponse
{
public:
	char **ResponseXml;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
public:
	int soap_type() const { return 9; } /* = unique type id SOAP_TYPE_ns__SendMissionResponse */
};
#endif

#ifndef SOAP_TYPE_ns__SendMission
#define SOAP_TYPE_ns__SendMission (10)
/* ns:SendMission */
struct ns__SendMission
{
public:
	char *MsgXml;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 10; } /* = unique type id SOAP_TYPE_ns__SendMission */
};
#endif

#ifndef SOAP_TYPE_ns__GetServerStatusResponse
#define SOAP_TYPE_ns__GetServerStatusResponse (12)
/* ns:GetServerStatusResponse */
struct ns__GetServerStatusResponse
{
public:
	char **ResponseXml;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
public:
	int soap_type() const { return 12; } /* = unique type id SOAP_TYPE_ns__GetServerStatusResponse */
};
#endif

#ifndef SOAP_TYPE_ns__GetServerStatus
#define SOAP_TYPE_ns__GetServerStatus (13)
/* ns:GetServerStatus */
struct ns__GetServerStatus
{
public:
	char *MsgXml;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 13; } /* = unique type id SOAP_TYPE_ns__GetServerStatus */
};
#endif

#ifndef SOAP_TYPE_ns__AddCameraResponse
#define SOAP_TYPE_ns__AddCameraResponse (15)
/* ns:AddCameraResponse */
struct ns__AddCameraResponse
{
public:
	char **ResponseXml;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
public:
	int soap_type() const { return 15; } /* = unique type id SOAP_TYPE_ns__AddCameraResponse */
};
#endif

#ifndef SOAP_TYPE_ns__AddCamera
#define SOAP_TYPE_ns__AddCamera (16)
/* ns:AddCamera */
struct ns__AddCamera
{
public:
	char *MsgXml;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 16; } /* = unique type id SOAP_TYPE_ns__AddCamera */
};
#endif

#ifndef SOAP_TYPE_ns__IfCameraResponse
#define SOAP_TYPE_ns__IfCameraResponse (18)
/* ns:IfCameraResponse */
struct ns__IfCameraResponse
{
public:
	char **ResponseXml;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
public:
	int soap_type() const { return 18; } /* = unique type id SOAP_TYPE_ns__IfCameraResponse */
};
#endif

#ifndef SOAP_TYPE_ns__IfCamera
#define SOAP_TYPE_ns__IfCamera (19)
/* ns:IfCamera */
struct ns__IfCamera
{
public:
	char *MsgXml;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 19; } /* = unique type id SOAP_TYPE_ns__IfCamera */
};
#endif

#ifndef SOAP_TYPE_ns__DelCameraResponse
#define SOAP_TYPE_ns__DelCameraResponse (21)
/* ns:DelCameraResponse */
struct ns__DelCameraResponse
{
public:
	char **ResponseXml;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
public:
	int soap_type() const { return 21; } /* = unique type id SOAP_TYPE_ns__DelCameraResponse */
};
#endif

#ifndef SOAP_TYPE_ns__DelCamera
#define SOAP_TYPE_ns__DelCamera (22)
/* ns:DelCamera */
struct ns__DelCamera
{
public:
	char *MsgXml;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 22; } /* = unique type id SOAP_TYPE_ns__DelCamera */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (23)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 23; } /* = unique type id SOAP_TYPE_SOAP_ENV__Header */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (24)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 24; } /* = unique type id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (26)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 26; } /* = unique type id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (29)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 29; } /* = unique type id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (30)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 30; } /* = unique type id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 ns__SendMission(struct soap*, char *MsgXml, char **ResponseXml);

SOAP_FMAC5 int SOAP_FMAC6 ns__GetServerStatus(struct soap*, char *MsgXml, char **ResponseXml);

SOAP_FMAC5 int SOAP_FMAC6 ns__AddCamera(struct soap*, char *MsgXml, char **ResponseXml);

SOAP_FMAC5 int SOAP_FMAC6 ns__IfCamera(struct soap*, char *MsgXml, char **ResponseXml);

SOAP_FMAC5 int SOAP_FMAC6 ns__DelCamera(struct soap*, char *MsgXml, char **ResponseXml);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__SendMission(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetServerStatus(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__AddCamera(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__IfCamera(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__DelCamera(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__SendMission(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *MsgXml, char **ResponseXml);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetServerStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *MsgXml, char **ResponseXml);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__AddCamera(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *MsgXml, char **ResponseXml);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__IfCamera(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *MsgXml, char **ResponseXml);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__DelCamera(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *MsgXml, char **ResponseXml);

#endif

/* End of soapStub.h */
